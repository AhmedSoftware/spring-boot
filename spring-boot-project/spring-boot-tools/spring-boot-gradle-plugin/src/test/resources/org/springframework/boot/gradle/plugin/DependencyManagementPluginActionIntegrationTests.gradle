plugins {
	id 'java'
	id 'org.springframework.boot' version '{version}'
}

if (project.hasProperty('applyDependencyManagementPlugin')) {
	apply plugin: 'io.spring.dependency-management'
	dependencyManagement {
		resolutionStrategy {
			eachDependency {
				if (it.requested.group == 'org.springframework.boot') {
					it.useVersion project.bootVersion
				}
			}
		}
	}
}

repositories {
	maven { url 'repository' }
}

def isDependencyManagementConfigured() {
	def dependencyManagement = project.extensions.findByName('dependencyManagement')
	return dependencyManagement != null && dependencyManagement.managedVersions
}

task hasNotConfiguredDependencyManagement {
	doLast {
		if (isDependencyManagementConfigured()) {
			throw new GradleException('Managed versions have been configured')
		}
	}
}

task hasConfiguredDependencyManagement {
	doLast {
		if (!isDependencyManagementConfigured()) {
			throw new GradleException('No managed versions have been configured')
		}
	}
}
